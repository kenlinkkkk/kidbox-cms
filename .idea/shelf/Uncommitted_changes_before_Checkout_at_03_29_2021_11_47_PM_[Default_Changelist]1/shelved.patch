Index: src/views/user/UserAdd.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <vx-card>\r\n    <div>\r\n      <!-- Avatar Row -->\r\n      <div class=\"vx-row\">\r\n        <div class=\"vx-col w-full\">\r\n          <div class=\"flex items-start flex-col sm:flex-row\">\r\n            <img :src=\"data_local.avatar.path\" class=\"mr-8 rounded w-24\" />\r\n            <!-- <vs-avatar :src=\"data.avatar\" size=\"80px\" class=\"mr-4\" /> -->\r\n            <div>\r\n              <input type=\"file\" class=\"hidden\" ref=\"update_avatar_input\" @change=\"update_avatar\" accept=\"image/*\">\r\n              <!-- Toggle comment of below buttons as one for actual flow & currently shown is only for demo -->\r\n              <vs-button type=\"border\" class=\"mr-4\" @click=\"$refs.update_avatar_input.click()\">Đổi ảnh đại diện</vs-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Content Row -->\r\n      <div class=\"vx-row\">\r\n        <div class=\"vx-col md:w-1/2 w-full\">\r\n          <vs-input class=\"w-full mt-4\" label=\"Email\" v-model=\"data_local.email\" v-validate=\"'required|email'\" name=\"username\" />\r\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\r\n\r\n          <vs-input class=\"w-full mt-4\" label=\"Tên\" v-model=\"data_local.name\" v-validate=\"'required'\" name=\"name\" />\r\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('name')\">{{ errors.first('name') }}</span>\r\n\r\n          <vs-input class=\"w-full mt-4\" label=\"Số điện thoại\" v-model=\"data_local.mobile\" type=\"text\" v-validate=\"'required'\" name=\"mobile\" />\r\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('mobile')\">{{ errors.first('mobile') }}</span>\r\n\r\n          <vs-input class=\"w-full mt-4\" label=\"Mật khẩu\" v-model=\"data_local.password\" v-validate=\"'required'\" name=\"password\" type=\"password\" />\r\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('password')\">{{ errors.first('password') }}</span>\r\n        </div>\r\n\r\n        <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n          <vs-input class=\"w-full mt-4\" label=\"Địa chỉ\" v-model=\"data_local.address\" v-validate=\"'required'\" name=\"address\" />\r\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('address')\">{{ errors.first('address') }}</span>\r\n\r\n          <div class=\"mt-4\">\r\n            <label class=\"vs-input--label\">Trường</label>\r\n            <v-select :clearable=\"false\" label=\"name\" @input=\"schoolSelected\" :options=\"optionsSelectSchool\" v-validate=\"'required'\" name=\"school_id\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('school_id')\">{{ errors.first('school_id') }}</span>\r\n          </div>\r\n\r\n          <div class=\"mt-4\">\r\n            <label class=\"vs-input--label\">Quyền</label>\r\n            <v-select :clearable=\"false\" :options=\"roles\" @input=\"roleSelected\" v-validate=\"'required'\" name=\"role\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('role')\">{{ errors.first('role') }}</span>\r\n          </div>\r\n\r\n          <div class=\"mt-4\">\r\n            <label class=\"vs-input--label\">Lớp</label>\r\n            <v-select :disabled=\"roleCheck\" label=\"name\" @input=\"classSelected\" :clearable=\"false\" :options=\"optionsSelectClass\" v-validate=\"'required'\" name=\"class_id\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('role')\">{{ errors.first('role') }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"vx-row\">\r\n        <div class=\"vx-col w-full\">\r\n          <div class=\"mt-8 flex flex-wrap items-center justify-end\">\r\n            <vs-button class=\"ml-auto mt-2\" @click=\"save_changes\" :disabled=\"!validateForm\">Lưu thông tin</vs-button>\r\n            <vs-button class=\"ml-4 mt-2\" type=\"border\" color=\"warning\" @click=\"reset_data\">Hủy</vs-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </vx-card>\r\n</template>\r\n\r\n<script>\r\n  import vSelect from 'vue-select'\r\n  import moduleSchool from '@/store/school/schoolStore.js'\r\n  import moduleClass from '@/store/class/classStore.js'\r\n  import axiosApiInstance from \"../../axios\";\r\n\r\n  export default {\r\n    components: {\r\n      vSelect\r\n    },\r\n    data () {\r\n      return {\r\n        data_local: {\r\n          name: '',\r\n          email: '',\r\n          mobile: '',\r\n          address: '',\r\n          school_id: '',\r\n          role: '',\r\n          class_id: '',\r\n          password: '',\r\n          avatar: {\r\n            path: '',\r\n            type: ''\r\n          }\r\n        },\r\n        roleCheck: true,\r\n        configLoadPage: {\r\n          limit: 10,\r\n          page: 1\r\n        },\r\n      }\r\n    },\r\n    computed: {\r\n      validateForm () {\r\n        return !this.errors.any()\r\n      },\r\n      roles() {\r\n        let roleList = this.$store.getters['userManagement/getRoles'];\r\n\r\n        return roleList\r\n      },\r\n      optionsSelectSchool() {\r\n        return this.$store.getters['school/getSchools']\r\n      },\r\n      optionsSelectClass() {\r\n        return this.$store.getters['class/getClasses']\r\n      }\r\n    },\r\n    methods: {\r\n      async save_changes () {\r\n        /* eslint-disable */\r\n        if (!this.validateForm) return\r\n\r\n        // Here will go your API call for updating data\r\n        // You can get data in \"this.data_local\"\r\n\r\n        /* eslint-enable */\r\n        let response = await this.$store.dispatch('userManagement/addNewUser', this.data_local)\r\n        if (response.data.code === 200) {\r\n          this.$vs.notify({\r\n            title:'Cập nhật thông tin hành công',\r\n            text: response.data.message,\r\n            position: 'top-right',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'\r\n          });\r\n        } else {\r\n          this.$vs.notify({\r\n            title:'Lỗi',\r\n            text: response.data.message,\r\n            position: 'top-right',\r\n            color:'danger',\r\n            iconPack: 'feather',\r\n            icon:'icon-x'\r\n          });\r\n        }\r\n      },\r\n      reset_data () {\r\n        this.$router.go(-1);\r\n      },\r\n      async update_avatar (input) {\r\n        let formData = new FormData();\r\n        if (input.target.files && input.target.files[0]) {\r\n          let file = input.target.files[0];\r\n          formData.append('file', file);\r\n\r\n          let config = {\r\n            url: \"/api/upload\",\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type' : 'multipart/form-data'\r\n            },\r\n            data: formData\r\n          }\r\n\r\n          let response = await axiosApiInstance(config)\r\n          let path = \"https://kidbox.vn/media/\";\r\n          this.data_local.avatar.path = path.concat(String(response.data.data.path));\r\n          this.data_local.avatar.type = response.data.data.type;\r\n        }\r\n      },\r\n      schoolSelected (event) {\r\n        this.data_local.school_id = event.id\r\n        this.$store.dispatch('class/getClassBySchoolId', { schoolId: this.data_local.school_id });\r\n      },\r\n      roleSelected (event) {\r\n        if (event.value === 61) {\r\n          this.roleCheck = false\r\n        }\r\n        this.data_local.role = event.value\r\n      },\r\n      classSelected (event) {\r\n        this.data_local.class_id = event.id\r\n      }\r\n    },\r\n    beforeDestroy() {\r\n      this.$store.unregisterModule('school')\r\n      this.$store.unregisterModule('class')\r\n    },\r\n    created() {\r\n      this.$store.dispatch('userManagement/getRoleList', this.configLoadPage).catch(err => { console.error(err) })\r\n      this.$store.registerModule('school', moduleSchool);\r\n      if (this.$acl.check('Admin')) {\r\n        this.$store.dispatch('school/getListSchool');\r\n      } else {\r\n        this.$store.dispatch('school/getSchoolById', { schoolId: this.$store.state.AppActiveUser.schoolId })\r\n      }\r\n      this.$store.registerModule('class', moduleClass);\r\n    }\r\n  }\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/user/UserAdd.vue	(revision 7b93287b43b4b1c60cf37464cca805d4d47a850b)
+++ src/views/user/UserAdd.vue	(date 1617036188145)
@@ -19,11 +19,14 @@
       <!-- Content Row -->
       <div class="vx-row">
         <div class="vx-col md:w-1/2 w-full">
-          <vs-input class="w-full mt-4" label="Email" v-model="data_local.email" v-validate="'required|email'" name="username" />
+          <vs-input class="w-full mt-4" label="Tên tài khoản" v-model="data_local.login" v-validate="'required'" name="login" />
+          <span class="text-danger text-sm"  v-show="errors.has('login')">{{ errors.first('login') }}</span>
+
+          <vs-input class="w-full mt-4" label="Email" v-model="data_local.email" v-validate="'required|email'" name="email" />
           <span class="text-danger text-sm"  v-show="errors.has('email')">{{ errors.first('email') }}</span>
 
-          <vs-input class="w-full mt-4" label="Tên" v-model="data_local.name" v-validate="'required'" name="name" />
-          <span class="text-danger text-sm"  v-show="errors.has('name')">{{ errors.first('name') }}</span>
+          <vs-input class="w-full mt-4" label="Tên" v-model="data_local.full_name" v-validate="'required'" name="full_name" />
+          <span class="text-danger text-sm"  v-show="errors.has('name')">{{ errors.first('full_name') }}</span>
 
           <vs-input class="w-full mt-4" label="Số điện thoại" v-model="data_local.mobile" type="text" v-validate="'required'" name="mobile" />
           <span class="text-danger text-sm"  v-show="errors.has('mobile')">{{ errors.first('mobile') }}</span>
@@ -39,7 +42,7 @@
 
           <div class="mt-4">
             <label class="vs-input--label">Trường</label>
-            <v-select :clearable="false" label="name" @input="schoolSelected" :options="optionsSelectSchool" v-validate="'required'" name="school_id" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
+            <v-select :clearable="false" label="name" @input="schoolSelected" :options="optionsSelectSchool" @search="searchInput" v-validate="'required'" name="school_id" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
             <span class="text-danger text-sm"  v-show="errors.has('school_id')">{{ errors.first('school_id') }}</span>
           </div>
 
@@ -52,7 +55,7 @@
           <div class="mt-4">
             <label class="vs-input--label">Lớp</label>
             <v-select :disabled="roleCheck" label="name" @input="classSelected" :clearable="false" :options="optionsSelectClass" v-validate="'required'" name="class_id" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
-            <span class="text-danger text-sm"  v-show="errors.has('role')">{{ errors.first('role') }}</span>
+            <span class="text-danger text-sm"  v-show="errors.has('class_id')">{{ errors.first('class_id') }}</span>
           </div>
         </div>
       </div>
@@ -81,7 +84,8 @@
     data () {
       return {
         data_local: {
-          name: '',
+          login: '',
+          full_name: '',
           email: '',
           mobile: '',
           address: '',
@@ -106,9 +110,16 @@
         return !this.errors.any()
       },
       roles() {
-        let roleList = this.$store.getters['userManagement/getRoles'];
-
-        return roleList
+        if (this.$acl.check('Admin')) {
+          let listRole = [];
+          return this.$store.getters['userManagement/getRoles'](listRole)
+        } else if (this.$acl.check('Master')){
+          let listRole = [64, 60];
+          return this.$store.getters['userManagement/getRoles'](listRole)
+        } else if (this.$acl.check('Teacher')) {
+          let listRole = [64, 60, 61];
+          return this.$store.getters['userManagement/getRoles'](listRole)
+        }
       },
       optionsSelectSchool() {
         return this.$store.getters['school/getSchools']
@@ -183,6 +194,18 @@
       },
       classSelected (event) {
         this.data_local.class_id = event.id
+      },
+      searchInput(input) {
+        if (this.timer) {
+          clearTimeout(this.timer);
+          this.timer = null;
+        }
+        this.timer = setTimeout(() => {
+          if (this.$acl.check('Admin')) {
+            this.configLoadPage.key_word = input;
+            this.$store.dispatch('school/getListSchool', this.configLoadPage);
+          }
+        }, 3000);
       }
     },
     beforeDestroy() {
@@ -193,7 +216,7 @@
       this.$store.dispatch('userManagement/getRoleList', this.configLoadPage).catch(err => { console.error(err) })
       this.$store.registerModule('school', moduleSchool);
       if (this.$acl.check('Admin')) {
-        this.$store.dispatch('school/getListSchool');
+        this.$store.dispatch('school/getListSchool', this.configLoadPage);
       } else {
         this.$store.dispatch('school/getSchoolById', { schoolId: this.$store.state.AppActiveUser.schoolId })
       }
Index: src/views/user/user-edit/UserEditTabAccount.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div id=\"user-edit-tab-info\">\r\n\r\n    <!-- Avatar Row -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <div class=\"flex items-start flex-col sm:flex-row\">\r\n          <img :src=\"data.image_url.path\" class=\"mr-8 rounded h-24 w-24\" />\r\n          <!-- <vs-avatar :src=\"data.avatar\" size=\"80px\" class=\"mr-4\" /> -->\r\n          <div>\r\n            <p class=\"text-lg font-medium mb-2 mt-4 sm:mt-0\">{{ data.name  }}</p>\r\n            <input type=\"file\" class=\"hidden\" ref=\"update_avatar_input\" @change=\"update_avatar\" accept=\"image/*\">\r\n            <!-- Toggle comment of below buttons as one for actual flow & currently shown is only for demo -->\r\n            <vs-button type=\"border\" class=\"mr-4\" @click=\"$refs.update_avatar_input.click()\">Đổi ảnh đại diện</vs-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Content Row -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col md:w-1/2 w-full\">\r\n        <vs-input class=\"w-full mt-4\" label=\"Tên tài khoản\" v-model=\"data_local.email\" v-validate=\"'required|alpha_num'\" name=\"username\" disabled=\"true\"/>\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\r\n\r\n        <vs-input class=\"w-full mt-4\" label=\"Tên\" v-model=\"data_local.name\" v-validate=\"'required|alpha_spaces'\" name=\"name\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('name')\">{{ errors.first('name') }}</span>\r\n\r\n        <vs-input class=\"w-full mt-4\" label=\"Email\" v-model=\"data_local.email\" type=\"email\" v-validate=\"'required|email'\" name=\"email\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\r\n\r\n        <vs-input class=\"w-full mt-4\" label=\"Số điện thoại\" v-model=\"data_local.phone_number\" type=\"text\" v-validate=\"'required'\" name=\"phone_number\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('phone_number')\">{{ errors.first('phone_number') }}</span>\r\n\r\n        <vs-input class=\"w-full mt-4\" label=\"Địa chỉ\" v-model=\"data_local.address\" v-validate=\"'alpha_spaces'\" name=\"address\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('address')\">{{ errors.first('address') }}</span>\r\n      </div>\r\n\r\n      <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n        <div class=\"mt-4\">\r\n          <div>\r\n            <label class=\"vs-input--label\">Trường</label>\r\n            <v-select :clearable=\"false\" :options=\"roles\" label=\"role_name\" v-model=\"data_local.user\" v-validate=\"'required'\" name=\"role\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('role')\">{{ errors.first('role') }}</span>\r\n          </div>\r\n\r\n          <div class=\"mt-4\">\r\n            <label class=\"vs-input--label\">Quyền</label>\r\n            <v-select :clearable=\"false\" :options=\"roles\" label=\"role_name\" v-model=\"data_local.user\" v-validate=\"'required'\" name=\"role\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('role')\">{{ errors.first('role') }}</span>\r\n          </div>\r\n\r\n          <div class=\"mt-4\">\r\n            <label class=\"vs-input--label\">Lớp</label>\r\n            <v-select :clearable=\"false\" :options=\"roles\" label=\"role_name\" v-model=\"data_local.user\" v-validate=\"'required'\" name=\"role\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('role')\">{{ errors.first('role') }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <div class=\"mt-8 flex flex-wrap items-center justify-end\">\r\n          <vs-button class=\"ml-auto mt-2\" @click=\"save_changes\" :disabled=\"!validateForm\">Lưu thông tin</vs-button>\r\n          <vs-button class=\"ml-4 mt-2\" type=\"border\" color=\"warning\" @click=\"reset_data\">Hủy</vs-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport axiosApiInstance from \"../../../axios\";\r\n\r\nexport default {\r\n  components: {\r\n    vSelect\r\n  },\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      data_local: JSON.parse(JSON.stringify(this.data)),\r\n      configLoadPage: {\r\n        limit: 10,\r\n        page: 1\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    validateForm () {\r\n      return !this.errors.any()\r\n    },\r\n    roles() {\r\n      let roleList = this.$store.getters['userManagement/getRoles'];\r\n\r\n      return roleList\r\n    },\r\n  },\r\n  methods: {\r\n    save_changes () {\r\n      /* eslint-disable */\r\n      if (!this.validateForm) return\r\n\r\n      // Here will go your API call for updating data\r\n      // You can get data in \"this.data_local\"\r\n\r\n      /* eslint-enable */\r\n    },\r\n    reset_data () {\r\n      this.$router.go(-1);\r\n    },\r\n    async update_avatar (input) {\r\n      let formData = new FormData();\r\n      if (input.target.files && input.target.files[0]) {\r\n        let file = input.target.files[0];\r\n        formData.append('file', file);\r\n\r\n        let config = {\r\n          url: \"/api/upload\",\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          data: formData\r\n        }\r\n\r\n        let response = await axiosApiInstance(config)\r\n        let path = \"https://kidbox.vn/media/\";\r\n        this.data_local.avatar.path = path.concat(String(response.data.data.path));\r\n        this.data_local.avatar.type = response.data.data.type;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.$store.dispatch('userManagement/getRoleList', this.configLoadPage).catch(err => { console.error(err) })\r\n  }\r\n}\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/user/user-edit/UserEditTabAccount.vue	(revision 7b93287b43b4b1c60cf37464cca805d4d47a850b)
+++ src/views/user/user-edit/UserEditTabAccount.vue	(date 1617034808557)
@@ -20,11 +20,11 @@
     <!-- Content Row -->
     <div class="vx-row">
       <div class="vx-col md:w-1/2 w-full">
-        <vs-input class="w-full mt-4" label="Tên tài khoản" v-model="data_local.email" v-validate="'required|alpha_num'" name="username" disabled="true"/>
-        <span class="text-danger text-sm"  v-show="errors.has('email')">{{ errors.first('email') }}</span>
+        <vs-input class="w-full mt-4" label="Tài khoản" v-model="data_local.login" v-validate="'required'" name="login" disabled="true"/>
+        <span class="text-danger text-sm"  v-show="errors.has('login')">{{ errors.first('login') }}</span>
 
-        <vs-input class="w-full mt-4" label="Tên" v-model="data_local.name" v-validate="'required|alpha_spaces'" name="name" />
-        <span class="text-danger text-sm"  v-show="errors.has('name')">{{ errors.first('name') }}</span>
+        <vs-input class="w-full mt-4" label="Tên" v-model="data_local.full_name" v-validate="'required'" name="full_name" />
+        <span class="text-danger text-sm"  v-show="errors.has('full_name')">{{ errors.first('name') }}</span>
 
         <vs-input class="w-full mt-4" label="Email" v-model="data_local.email" type="email" v-validate="'required|email'" name="email" />
         <span class="text-danger text-sm"  v-show="errors.has('email')">{{ errors.first('email') }}</span>
@@ -39,22 +39,22 @@
       <div class="vx-col md:w-1/2 w-full">
 
         <div class="mt-4">
-          <div>
+          <div class="mt-4">
             <label class="vs-input--label">Trường</label>
-            <v-select :clearable="false" :options="roles" label="role_name" v-model="data_local.user" v-validate="'required'" name="role" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
-            <span class="text-danger text-sm"  v-show="errors.has('role')">{{ errors.first('role') }}</span>
+            <v-select :clearable="false" label="name" @input="schoolSelected" :options="optionsSelectSchool" v-validate="'required'" v-model="data_local.school_name" name="school_id" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
+            <span class="text-danger text-sm"  v-show="errors.has('school_id')">{{ errors.first('school_id') }}</span>
           </div>
 
           <div class="mt-4">
             <label class="vs-input--label">Quyền</label>
-            <v-select :clearable="false" :options="roles" label="role_name" v-model="data_local.user" v-validate="'required'" name="role" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
+            <v-select :clearable="false" :options="roles" @input="roleSelected" v-validate="'required'" v-model="data_local.user.role_name" name="role" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
             <span class="text-danger text-sm"  v-show="errors.has('role')">{{ errors.first('role') }}</span>
           </div>
 
           <div class="mt-4">
             <label class="vs-input--label">Lớp</label>
-            <v-select :clearable="false" :options="roles" label="role_name" v-model="data_local.user" v-validate="'required'" name="role" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
-            <span class="text-danger text-sm"  v-show="errors.has('role')">{{ errors.first('role') }}</span>
+            <v-select :disabled="roleCheck" label="name" @input="classSelected" :clearable="false" :options="optionsSelectClass" v-validate="'required'" name="class_id" :dir="$vs.rtl ? 'rtl' : 'ltr'" />
+            <span class="text-danger text-sm"  v-show="errors.has('class_id')">{{ errors.first('class_id') }}</span>
           </div>
         </div>
       </div>
@@ -73,6 +73,8 @@
 <script>
 import vSelect from 'vue-select'
 import axiosApiInstance from "../../../axios";
+import moduleSchool from '@/store/school/schoolStore.js'
+import moduleClass from '@/store/class/classStore.js'
 
 export default {
   components: {
@@ -91,6 +93,7 @@
         limit: 10,
         page: 1
       },
+      roleCheck: true,
     }
   },
   computed: {
@@ -98,20 +101,30 @@
       return !this.errors.any()
     },
     roles() {
-      let roleList = this.$store.getters['userManagement/getRoles'];
-
-      return roleList
+      if (this.$acl.check('Admin')) {
+        let listRole = [];
+        return this.$store.getters['userManagement/getRoles'](listRole)
+      } else if (this.$acl.check('Master')){
+        let listRole = [64, 60];
+        return this.$store.getters['userManagement/getRoles'](listRole)
+      } else if (this.$acl.check('Teacher')) {
+        let listRole = [64, 60, 61];
+        return this.$store.getters['userManagement/getRoles'](listRole)
+      }
     },
+    optionsSelectSchool() {
+      return this.$store.getters['school/getSchools']
+    },
+    optionsSelectClass() {
+      return this.$store.getters['class/getClasses']
+    }
   },
   methods: {
     save_changes () {
       /* eslint-disable */
-      if (!this.validateForm) return
-
-      // Here will go your API call for updating data
-      // You can get data in "this.data_local"
-
-      /* eslint-enable */
+      // if (!this.validateForm) {
+        this.$store.dispatch('userManagement/updateUserInfo', this.data_local)
+      // }
     },
     reset_data () {
       this.$router.go(-1);
@@ -136,10 +149,30 @@
         this.data_local.avatar.path = path.concat(String(response.data.data.path));
         this.data_local.avatar.type = response.data.data.type;
       }
+    },
+    schoolSelected (event) {
+      this.data_local.school_id = event.id
+      this.$store.dispatch('class/getClassBySchoolId', { schoolId: this.data_local.school_id });
+    },
+    roleSelected (event) {
+      if (event.value === 61) {
+        this.roleCheck = false
+      }
+      this.data_local.role = event.value
+    },
+    classSelected (event) {
+      this.data_local.class_id = event.id
     }
   },
   created() {
     this.$store.dispatch('userManagement/getRoleList', this.configLoadPage).catch(err => { console.error(err) })
+    this.$store.registerModule('school', moduleSchool);
+    if (this.$acl.check('Admin')) {
+      this.$store.dispatch('school/getListSchool');
+    } else {
+      this.$store.dispatch('school/getSchoolById', { schoolId: this.$store.state.AppActiveUser.schoolId })
+    }
+    this.$store.registerModule('class', moduleClass);
   }
 }
 </script>
Index: src/store/user/userAction.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axiosApiInstance from \"../../axios\";\r\n// import qs from 'qs'\r\n\r\nexport default {\r\n  async changePassword(_,payload) {\r\n    let userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n    let data = {\r\n      \"username\": userInfo.username,\r\n      ...payload\r\n    }\r\n\r\n    let config = {\r\n      method: 'POST',\r\n      url: '/api/res_user/change_password',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data\r\n    }\r\n\r\n    return axiosApiInstance(config)\r\n  },\r\n  async addNewUser(_, payload) {\r\n    let data = {\r\n      ...payload\r\n    }\r\n\r\n    let config = {\r\n      method: \"POST\",\r\n      url: \"/cms/users/add\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    }\r\n\r\n    return axiosApiInstance(config)\r\n  },\r\n  async deleteUserById(_, payload) {\r\n    let config = {\r\n      method: \"POST\",\r\n      url: \"/cms/users/delete/\" + payload.userId,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    return axiosApiInstance(config)\r\n  },\r\n  async searchUser(_, payload) {\r\n    let data = {\r\n      ...payload\r\n    }\r\n\r\n    let config = {\r\n      method: 'POST',\r\n      url: '/cms/users/list',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    }\r\n\r\n    return axiosApiInstance(config)\r\n  },\r\n  async getRoleList({ commit }, payload) {\r\n    let data = {\r\n      limit: payload.limit,\r\n      page: payload.page\r\n    }\r\n\r\n    let config = {\r\n      method: 'POST',\r\n      url: '/cms/users/role/list',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    }\r\n\r\n    let response = await axiosApiInstance(config)\r\n\r\n    commit('SET_LIST_USER_ROLE', response.data.data.data)\r\n    return axiosApiInstance(config)\r\n  },\r\n  async updateUserInfo(_, payload) {\r\n    let data = {\r\n      ...payload\r\n    }\r\n\r\n    let config = {\r\n      method: 'POST',\r\n      url: '/cms/users/update/' +  payload.userId,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      data: data\r\n    }\r\n\r\n    return axiosApiInstance(config)\r\n  },\r\n\r\n  async getListUserByRole({ commit }, payload) {\r\n\r\n    let data = {\r\n      ...payload\r\n    }\r\n\r\n    let config = {\r\n      method: \"POST\",\r\n      url: \"/cms/users/list\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    }\r\n\r\n\r\n    let response = await axiosApiInstance(config)\r\n\r\n    if (response.status === 200) {\r\n      if (response.data.code === 200) {\r\n        commit('SET_LIST_USER', response.data.data.results)\r\n        commit('SET_PAGINATE', {\r\n          totalPages: response.data.data.total_pages\r\n        })\r\n      }\r\n    }\r\n  },\r\n  async getDetailById(_, payload) {\r\n    let config = {\r\n      method: \"POST\",\r\n      url: \"/cms/users/detail/\" + payload.id,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    let response = await axiosApiInstance(config)\r\n    return response.data\r\n  },\r\n\r\n\r\n  async getUserByClass({ commit }, payload){\r\n\r\n    let data = {\r\n      \"class_ids\": payload.class_ids,\r\n      \"name\": payload.name,\r\n    }\r\n    console.log(data)\r\n    let config = {\r\n      method: \"POST\",\r\n      url: \"/cms/users/get-user-by-class\",\r\n      headers: {\r\n        'Authorization': localStorage.getItem('accessToken'),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data\r\n    }\r\n    let response = await axiosApiInstance(config)\r\n    if(response.status === 200){\r\n      if(response.data.code === 200) {\r\n        commit('SET_LIST_PARENTS', response.data.data)\r\n      }else{\r\n        commit('SET_LIST_PARENTS', [])\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/store/user/userAction.js	(revision 7b93287b43b4b1c60cf37464cca805d4d47a850b)
+++ src/store/user/userAction.js	(date 1617034819555)
@@ -84,13 +84,25 @@
     return axiosApiInstance(config)
   },
   async updateUserInfo(_, payload) {
+    payload
     let data = {
-      ...payload
+      login: payload.login,
+      full_name: payload.full_name,
+      email: payload.email,
+      mobile: payload.phone_number,
+      address: payload.address,
+      school_id: payload.school_id,
+      status: 1,
+    }
+    if (payload.role) {
+      Object.assign(data, {role: payload.role})
     }
-
+    if (payload.class_id) {
+      Object.assign(data, {class_id: payload.class_id})
+    }
     let config = {
       method: 'POST',
-      url: '/cms/users/update/' +  payload.userId,
+      url: '/cms/users/update/' +  payload.user.id,
       headers: {
         'Content-type': 'application/json'
       },
@@ -146,7 +158,6 @@
       "class_ids": payload.class_ids,
       "name": payload.name,
     }
-    console.log(data)
     let config = {
       method: "POST",
       url: "/cms/users/get-user-by-class",
Index: src/store/user/userGetters.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const getters = {\r\n  getRoles: state => {\r\n\r\n    let response = [{\r\n      label: 'Lựa chọn',\r\n      value: 'Lựa chọn'\r\n    }]\r\n    state.userListRoles.forEach(item => {\r\n      response.push({\r\n        label: item.name,\r\n        value: item.id\r\n      })\r\n    })\r\n    return response\r\n  },\r\n  getListUser: state => {\r\n    let response = []\r\n    state.userList.forEach(item => {\r\n      response.push({\r\n        id: item.user.id,\r\n        avatar: item.image_url,\r\n        email: item.email,\r\n        name: item.name,\r\n        status: 'active',\r\n        phoneNumber: item.phone_number,\r\n        role: item.user,\r\n        school: {\r\n          id: item.school_id,\r\n          name: item.school_name,\r\n        }\r\n      })\r\n    })\r\n\r\n    return response\r\n  },\r\n  getPaginate: state => {\r\n    return state.paginate\r\n  },\r\n  getUserById: state => userId => state.userList.find((user) => user.user.id === userId),\r\n\r\n  getParents: state =>{\r\n    let response = []\r\n    if(state.parents.length > 0){\r\n      response.push({\r\n        name: \"Tất cả\",\r\n        class_id: '',\r\n        id: -1\r\n      })\r\n    }\r\n    state.parents.forEach(item => {\r\n      response.push({\r\n        name: item.name,\r\n        class_id: item.class_id,\r\n        id: item.id\r\n      })\r\n    })\r\n    return response;\r\n  },\r\n  getParent: state => parentId => state.parents.find((parent) => parent.id === parentId),\r\n\r\n}\r\n\r\nexport default getters\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/store/user/userGetters.js	(revision 7b93287b43b4b1c60cf37464cca805d4d47a850b)
+++ src/store/user/userGetters.js	(date 1617032424424)
@@ -1,34 +1,57 @@
 const getters = {
-  getRoles: state => {
+  getRoles: state => listRole => {
 
     let response = [{
       label: 'Lựa chọn',
       value: 'Lựa chọn'
     }]
     state.userListRoles.forEach(item => {
-      response.push({
-        label: item.name,
-        value: item.id
-      })
+      if (!listRole.includes(item.id)) {
+        response.push({
+          label: item.name,
+          value: item.id
+        })
+      }
     })
     return response
   },
   getListUser: state => {
     let response = []
     state.userList.forEach(item => {
-      response.push({
-        id: item.user.id,
-        avatar: item.image_url,
-        email: item.email,
-        name: item.name,
-        status: 'active',
-        phoneNumber: item.phone_number,
-        role: item.user,
-        school: {
-          id: item.school_id,
-          name: item.school_name,
-        }
-      })
+      if (item.image_url) {
+        response.push({
+          id: item.user.id,
+          avatar: item.image_url,
+          email: item.email,
+          name: item.full_name,
+          status: 'active',
+          phoneNumber: item.phone_number,
+          role: item.user,
+          login: item.login,
+          school: {
+            id: item.school_id,
+            name: item.school_name,
+          }
+        })
+      } else {
+        response.push({
+          id: item.user.id,
+          avatar: {
+            path: "https://kidbox.vn/media/default/no-image.png",
+            type: "png"
+          },
+          email: item.email,
+          name: item.full_name,
+          status: 'active',
+          phoneNumber: item.phone_number,
+          role: item.user,
+          login: item.login,
+          school: {
+            id: item.school_id,
+            name: item.school_name,
+          }
+        })
+      }
     })
 
     return response
Index: src/views/user/user-list/cell-renderer/CellRendererLink.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"flex items-center\">\r\n    <vs-avatar :src=\"params.data.avatar.path\" class=\"flex-shrink-0 mr-2\" size=\"30px\" @click=\"$router.push(url)\" />\r\n    <router-link :to=\"url\" @click.stop.prevent class=\"text-inherit hover:text-primary\">{{ params.data.email }}</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CellRendererLink',\r\n  computed: {\r\n    url () {\r\n      return '/admin/user/view/' + this.params.data.id\r\n\r\n      // Below line will be for actual product\r\n      // Currently it's commented due to demo purpose - Above url is for demo purpose\r\n      // return \"/apps/user/user-view/\" + this.params.data.id\r\n    }\r\n  }\r\n}\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/user/user-list/cell-renderer/CellRendererLink.vue	(revision 7b93287b43b4b1c60cf37464cca805d4d47a850b)
+++ src/views/user/user-list/cell-renderer/CellRendererLink.vue	(date 1617028366570)
@@ -1,7 +1,7 @@
 <template>
   <div class="flex items-center">
     <vs-avatar :src="params.data.avatar.path" class="flex-shrink-0 mr-2" size="30px" @click="$router.push(url)" />
-    <router-link :to="url" @click.stop.prevent class="text-inherit hover:text-primary">{{ params.data.email }}</router-link>
+    <router-link :to="url" @click.stop.prevent class="text-inherit hover:text-primary">{{ params.data.login }}</router-link>
   </div>
 </template>
 
@@ -11,10 +11,6 @@
   computed: {
     url () {
       return '/admin/user/view/' + this.params.data.id
-
-      // Below line will be for actual product
-      // Currently it's commented due to demo purpose - Above url is for demo purpose
-      // return "/apps/user/user-view/" + this.params.data.id
     }
   }
 }
Index: src/views/user/user-list/UserList.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n\r\n  <div id=\"page-user-list\">\r\n\r\n    <vx-card ref=\"filterCard\" title=\"Bộ lọc\" class=\"user-list-filters mb-8\" actionButtons @refresh=\"resetColFilters\" @remove=\"resetColFilters\">\r\n      <div class=\"vx-row flex flex-wrap justify-between\">\r\n        <div class=\"vx-col flex-1\">\r\n          <label class=\"text-sm opacity-75\">Phân quyền</label>\r\n          <v-select :options=\"roleOptions\" label=\"label\" :clearable=\"false\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" v-model=\"roleFilter\" class=\"mb-4 md:mb-0\" />\r\n        </div>\r\n        <div class=\"vx-col flex-1\">\r\n          <label class=\"text-sm opacity-75\">Trạng thái</label>\r\n          <v-select :options=\"statusOptions\" :clearable=\"false\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" v-model=\"statusFilter\" class=\"mb-4 md:mb-0\" />\r\n        </div>\r\n<!--        <div class=\"vx-col md:w-1/4 sm:w-1/2 w-full\">-->\r\n<!--          <label class=\"text-sm opacity-75\">Verified</label>-->\r\n<!--          <v-select :options=\"isVerifiedOptions\" :clearable=\"false\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" v-model=\"isVerifiedFilter\" class=\"mb-4 sm:mb-0\" />-->\r\n<!--        </div>-->\r\n<!--        <div class=\"vx-col md:w-1/4 sm:w-1/2 w-full\">-->\r\n<!--          <label class=\"text-sm opacity-75\">Department</label>-->\r\n<!--          <v-select :options=\"departmentOptions\" :clearable=\"false\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" v-model=\"departmentFilter\" />-->\r\n<!--        </div>-->\r\n      </div>\r\n    </vx-card>\r\n\r\n    <div class=\"vx-card p-6\">\r\n\r\n      <div class=\"flex flex-wrap items-center\">\r\n\r\n        <!-- ITEMS PER PAGE -->\r\n        <div class=\"flex-grow\">\r\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\r\n            <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\r\n              <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ usersData.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : usersData.length }} of {{ usersData.length }}</span>\r\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\r\n            </div>\r\n            <!-- <vs-button class=\"btn-drop\" type=\"line\" color=\"primary\" icon-pack=\"feather\" icon=\"icon-chevron-down\"></vs-button> -->\r\n            <vs-dropdown-menu>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\r\n                <span>10</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\r\n                <span>20</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(25)\">\r\n                <span>25</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(30)\">\r\n                <span>30</span>\r\n              </vs-dropdown-item>\r\n            </vs-dropdown-menu>\r\n          </vs-dropdown>\r\n        </div>\r\n\r\n        <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\r\n          <vs-input class=\"sm:mr-4 mr-0 sm:w-auto w-full sm:order-normal order-3 sm:mt-0 mt-4\" v-model=\"searchQuery\" @input=\"updateSearchQuery\" placeholder=\"Tìm kiếm...\" />\r\n          <!-- <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Export as CSV</vs-button> -->\r\n\r\n          <!-- ACTION - DROPDOWN -->\r\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\r\n\r\n            <div class=\"p-3 shadow-drop rounded-lg d-theme-dark-light-bg cursor-pointer flex items-end justify-center text-lg font-medium w-48\">\r\n              <span class=\"mr-2 leading-none\">Hành động</span>\r\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\r\n            </div>\r\n\r\n            <vs-dropdown-menu>\r\n              <vs-dropdown-item>\r\n                <span class=\"flex items-center w-40\">\r\n                  <feather-icon icon=\"PlusIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\r\n                  <span @click=\"addUser\">Thêm mới</span>\r\n                </span>\r\n              </vs-dropdown-item>\r\n            </vs-dropdown-menu>\r\n          </vs-dropdown>\r\n      </div>\r\n\r\n\r\n      <!-- AgGrid Table -->\r\n      <ag-grid-vue\r\n        ref=\"agGridTable\"\r\n        :components=\"components\"\r\n        :gridOptions=\"gridOptions\"\r\n        class=\"ag-theme-material w-100 my-4 ag-grid-table\"\r\n        :columnDefs=\"columnDefs\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowData=\"usersData\"\r\n        rowSelection=\"multiple\"\r\n        colResizeDefault=\"shift\"\r\n        :animateRows=\"true\"\r\n        :floatingFilter=\"true\"\r\n        :pagination=\"true\"\r\n        :paginationPageSize=\"paginationPageSize\"\r\n        :suppressPaginationPanel=\"true\"\r\n        :enableRtl=\"$vs.rtl\">\r\n      </ag-grid-vue>\r\n\r\n      <vs-pagination\r\n        :total=\"totalPages\"\r\n        v-model=\"currentPage\"\r\n        @input=\"selectPage\"/>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { AgGridVue } from 'ag-grid-vue'\r\nimport '@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss'\r\nimport vSelect from 'vue-select'\r\n\r\n// Store Module\r\n// import moduleUserManagement from '@/store/user/userStore.js'\r\n\r\n// Cell Renderer\r\nimport CellRendererLink from './cell-renderer/CellRendererLink.vue'\r\nimport CellRendererStatus from './cell-renderer/CellRendererStatus.vue'\r\nimport CellRendererActions from './cell-renderer/CellRendererActions.vue'\r\n\r\n\r\nexport default {\r\n  components: {\r\n    AgGridVue,\r\n    vSelect,\r\n\r\n    // Cell Renderer\r\n    CellRendererLink,\r\n    CellRendererStatus,\r\n    CellRendererActions\r\n  },\r\n  data () {\r\n    return {\r\n      configLoadPage: {\r\n        limit: 10,\r\n        page: 1\r\n      },\r\n      // Filter Options\r\n      roleFilter: { label: 'Tất cả', value: 'Tất cả'},\r\n      statusFilter: { label: 'Tất cả', value: 'Tất cả' },\r\n      statusOptions: [\r\n        { label: 'All', value: 'all' },\r\n        { label: 'Active', value: 'active' },\r\n        { label: 'Deactivated', value: 'deactivated' },\r\n        { label: 'Blocked', value: 'blocked' }\r\n      ],\r\n\r\n      searchQuery: '',\r\n\r\n      // AgGrid\r\n      gridApi: null,\r\n      gridOptions: {},\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        suppressMenu: true\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: 'ID',\r\n          field: 'id',\r\n          width: 125,\r\n          filter: true,\r\n          checkboxSelection: true,\r\n          headerCheckboxSelectionFilteredOnly: true,\r\n          headerCheckboxSelection: true\r\n        },\r\n        {\r\n          headerName: 'Tài khoản',\r\n          field: 'username',\r\n          filter: true,\r\n          width: 210,\r\n          cellRendererFramework: 'CellRendererLink'\r\n        },\r\n        {\r\n          headerName: 'Email',\r\n          field: 'email',\r\n          filter: true,\r\n          width: 225\r\n        },\r\n        {\r\n          headerName: 'Tên',\r\n          field: 'name',\r\n          filter: true,\r\n          width: 200\r\n        },\r\n        {\r\n          headerName: 'Phân quyền',\r\n          field: 'role.role_name',\r\n          filter: true,\r\n          width: 200\r\n        },\r\n        {\r\n          headerName: 'Trạng thái',\r\n          field: 'status',\r\n          filter: true,\r\n          width: 200,\r\n          cellRendererFramework: 'CellRendererStatus'\r\n        },\r\n        {\r\n          headerName: 'Trường',\r\n          field: 'school.name',\r\n          filter: true,\r\n          width: 225\r\n        },\r\n        {\r\n          headerName: 'Hành động',\r\n          field: 'transactions',\r\n          width: 150,\r\n          cellRendererFramework: 'CellRendererActions'\r\n        }\r\n      ],\r\n\r\n      // Cell Renderer Components\r\n      components: {\r\n        CellRendererLink,\r\n        CellRendererStatus,\r\n        CellRendererActions\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    roleFilter (obj) {\r\n      this.setColumnFilter('role', obj.label)\r\n    },\r\n    statusFilter (obj) {\r\n      this.setColumnFilter('status', obj.value)\r\n    },\r\n    departmentFilter (obj) {\r\n      this.setColumnFilter('department', obj.value)\r\n    }\r\n  },\r\n  computed: {\r\n    usersData () {\r\n      return this.$store.getters['userManagement/getListUser'];\r\n    },\r\n    roleOptions() {\r\n      return this.$store.getters['userManagement/getRoles'];\r\n    },\r\n    paginationPageSize () {\r\n      if (this.gridApi) return this.gridApi.paginationGetPageSize()\r\n      else return 10\r\n    },\r\n    totalPages () {\r\n      let paginate = this.$store.getters['userManagement/getPaginate']\r\n      if (paginate.totalPages) return paginate.totalPages\r\n      else return 0\r\n    },\r\n    currentPage: {\r\n      get () {\r\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1\r\n        else return 1\r\n      },\r\n      set (val) {\r\n        this.gridApi.paginationGoToPage(val - 1)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    setColumnFilter (column, val) {\r\n      const filter = this.gridApi.getFilterInstance(column)\r\n      let modelObj = null\r\n      if (val !== 'Lựa chọn') {\r\n        modelObj = { type: 'equals', filter: val }\r\n      }\r\n      filter.setModel(modelObj)\r\n      this.gridApi.onFilterChanged()\r\n    },\r\n    resetColFilters () {\r\n      // Reset Grid Filter\r\n      this.gridApi.setFilterModel(null)\r\n      this.gridApi.onFilterChanged()\r\n\r\n      // Reset Filter Options\r\n      this.roleFilter = this.statusFilter = this.isVerifiedFilter = this.departmentFilter = { label: 'All', value: 'all' }\r\n\r\n      this.$refs.filterCard.removeRefreshAnimation()\r\n    },\r\n    updateSearchQuery (val) {\r\n      this.gridApi.setQuickFilter(val)\r\n    },\r\n    addUser () {\r\n      this.$router.push('/admin/user/add');\r\n    },\r\n    selectPage (event) {\r\n      this.configLoadPage.page = event;\r\n      this.$store.dispatch('userManagement/getListUserByRole', this.configLoadPage).catch(err => { console.error(err) })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.gridApi = this.gridOptions.api\r\n\r\n    /* =================================================================\r\n      NOTE:\r\n      Header is not aligned properly in RTL version of agGrid table.\r\n      However, we given fix to this issue. If you want more robust solution please contact them at gitHub\r\n    ================================================================= */\r\n    if (this.$vs.rtl) {\r\n      const header = this.$refs.agGridTable.$el.querySelector('.ag-header-container')\r\n      header.style.left = `-${  String(Number(header.style.transform.slice(11, -3)) + 9)  }px`\r\n    }\r\n  },\r\n  created () {\r\n    this.$store.dispatch('userManagement/getRoleList', this.configLoadPage).catch(err => { console.error(err) })\r\n\r\n    if (this.$acl.check('Admin')) {\r\n      Object.assign(this.configLoadPage, {\r\n        role_id: [60, 61 ,62, 63, 64]\r\n      })\r\n    } else {\r\n      Object.assign(this.configLoadPage, {\r\n        role_id: [60, 61, 62, 63],\r\n        school_id: this.$store.state.AppActiveUser.schoolId\r\n      })\r\n    }\r\n    this.$store.dispatch('userManagement/getListUserByRole', this.configLoadPage).catch(err => { console.error(err) })\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#page-user-list {\r\n  .user-list-filters {\r\n    .vs__actions {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 50%;\r\n      transform: translateY(-58%);\r\n    }\r\n  }\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/user/user-list/UserList.vue	(revision 7b93287b43b4b1c60cf37464cca805d4d47a850b)
+++ src/views/user/user-list/UserList.vue	(date 1617033076594)
@@ -1,32 +1,8 @@
 <template>
 
   <div id="page-user-list">
-
-    <vx-card ref="filterCard" title="Bộ lọc" class="user-list-filters mb-8" actionButtons @refresh="resetColFilters" @remove="resetColFilters">
-      <div class="vx-row flex flex-wrap justify-between">
-        <div class="vx-col flex-1">
-          <label class="text-sm opacity-75">Phân quyền</label>
-          <v-select :options="roleOptions" label="label" :clearable="false" :dir="$vs.rtl ? 'rtl' : 'ltr'" v-model="roleFilter" class="mb-4 md:mb-0" />
-        </div>
-        <div class="vx-col flex-1">
-          <label class="text-sm opacity-75">Trạng thái</label>
-          <v-select :options="statusOptions" :clearable="false" :dir="$vs.rtl ? 'rtl' : 'ltr'" v-model="statusFilter" class="mb-4 md:mb-0" />
-        </div>
-<!--        <div class="vx-col md:w-1/4 sm:w-1/2 w-full">-->
-<!--          <label class="text-sm opacity-75">Verified</label>-->
-<!--          <v-select :options="isVerifiedOptions" :clearable="false" :dir="$vs.rtl ? 'rtl' : 'ltr'" v-model="isVerifiedFilter" class="mb-4 sm:mb-0" />-->
-<!--        </div>-->
-<!--        <div class="vx-col md:w-1/4 sm:w-1/2 w-full">-->
-<!--          <label class="text-sm opacity-75">Department</label>-->
-<!--          <v-select :options="departmentOptions" :clearable="false" :dir="$vs.rtl ? 'rtl' : 'ltr'" v-model="departmentFilter" />-->
-<!--        </div>-->
-      </div>
-    </vx-card>
-
     <div class="vx-card p-6">
-
       <div class="flex flex-wrap items-center">
-
         <!-- ITEMS PER PAGE -->
         <div class="flex-grow">
           <vs-dropdown vs-trigger-click class="cursor-pointer">
@@ -167,7 +143,7 @@
         },
         {
           headerName: 'Tài khoản',
-          field: 'username',
+          field: 'login',
           filter: true,
           width: 210,
           cellRendererFramework: 'CellRendererLink'
@@ -205,7 +181,7 @@
         },
         {
           headerName: 'Hành động',
-          field: 'transactions',
+          field: 'id',
           width: 150,
           cellRendererFramework: 'CellRendererActions'
         }
@@ -235,7 +211,16 @@
       return this.$store.getters['userManagement/getListUser'];
     },
     roleOptions() {
-      return this.$store.getters['userManagement/getRoles'];
+      if (this.$acl.check('Admin')) {
+        let listRole = [];
+        return this.$store.getters['userManagement/getRoles'](listRole)
+      } else if (this.$acl.check('Master')){
+        let listRole = [64, 60];
+        return this.$store.getters['userManagement/getRoles'](listRole)
+      } else if (this.$acl.check('Teacher')) {
+        let listRole = [64, 60, 61];
+        return this.$store.getters['userManagement/getRoles'](listRole)
+      }
     },
     paginationPageSize () {
       if (this.gridApi) return this.gridApi.paginationGetPageSize()
Index: src/views/user/user-list/cell-renderer/CellRendererActions.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n    <div :style=\"{'direction': $vs.rtl ? 'rtl' : 'ltr'}\">\r\n      <feather-icon icon=\"Edit3Icon\" svgClasses=\"h-5 w-5 mr-4 hover:text-primary cursor-pointer\" @click=\"editRecord\" />\r\n      <feather-icon icon=\"Trash2Icon\" svgClasses=\"h-5 w-5 hover:text-danger cursor-pointer\" @click=\"confirmDeleteRecord\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CellRendererActions',\r\n  methods: {\r\n    editRecord () {\r\n      this.$router.push(\"/admin/user/edit/\" + this.params.data.id).catch(() => {})\r\n\r\n      /*\r\n              Below line will be for actual product\r\n              Currently it's commented due to demo purpose - Above url is for demo purpose\r\n\r\n              this.$router.push(\"/apps/user/user-edit/\" + this.params.data.id).catch(() => {})\r\n            */\r\n    },\r\n    confirmDeleteRecord () {\r\n      this.$vs.dialog({\r\n        type: 'confirm',\r\n        color: 'danger',\r\n        title: 'Vô hiệu hóa tài khoản',\r\n        text: `Có chắc bạn muốn vô hiệu hóa tài khoản \"${this.params.data.name}\" ?`,\r\n        accept: this.deleteRecord,\r\n        acceptText: 'Delete'\r\n      })\r\n    },\r\n    deleteRecord () {\r\n      /* Below two lines are just for demo purpose */\r\n      this.showDeleteSuccess()\r\n\r\n      /* UnComment below lines for enabling true flow if deleting user */\r\n      // this.$store.dispatch(\"userManagement/removeRecord\", this.params.data.id)\r\n      //   .then(()   => { this.showDeleteSuccess() })\r\n      //   .catch(err => { console.error(err)       })\r\n    },\r\n    showDeleteSuccess () {\r\n      this.$vs.notify({\r\n        color: 'success',\r\n        title: 'Đã vô hiệu hóa',\r\n        text: 'Tài khoản đã được vô hiệu hóa'\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/user/user-list/cell-renderer/CellRendererActions.vue	(revision 7b93287b43b4b1c60cf37464cca805d4d47a850b)
+++ src/views/user/user-list/cell-renderer/CellRendererActions.vue	(date 1617029995813)
@@ -11,13 +11,6 @@
   methods: {
     editRecord () {
       this.$router.push("/admin/user/edit/" + this.params.data.id).catch(() => {})
-
-      /*
-              Below line will be for actual product
-              Currently it's commented due to demo purpose - Above url is for demo purpose
-
-              this.$router.push("/apps/user/user-edit/" + this.params.data.id).catch(() => {})
-            */
     },
     confirmDeleteRecord () {
       this.$vs.dialog({
@@ -30,13 +23,20 @@
       })
     },
     deleteRecord () {
-      /* Below two lines are just for demo purpose */
-      this.showDeleteSuccess()
-
       /* UnComment below lines for enabling true flow if deleting user */
-      // this.$store.dispatch("userManagement/removeRecord", this.params.data.id)
-      //   .then(()   => { this.showDeleteSuccess() })
-      //   .catch(err => { console.error(err)       })
+      this.$store.dispatch("userManagement/deleteUserById", { userId: this.params.data.id })
+        .then((response)   => {
+          if (response.status === 200) {
+            if (response.data.code === 200) {
+              this.showDeleteSuccess()
+            } else {
+              this.showDeleteFail()
+            }
+          } else {
+            this.showDeleteFail()
+          }
+        })
+        .catch(err => { console.error(err)       })
     },
     showDeleteSuccess () {
       this.$vs.notify({
@@ -44,6 +44,13 @@
         title: 'Đã vô hiệu hóa',
         text: 'Tài khoản đã được vô hiệu hóa'
       })
+    },
+    showDeleteFail () {
+      this.$vs.notify({
+        color: 'danger',
+        title: 'Thất bại',
+        text: 'Vô hiệu hóa tài khoản thất bại'
+      })
     }
   }
 }
